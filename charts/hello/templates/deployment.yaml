apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "hello.fullname" . }}
  labels:
    {{- include "hello.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "hello.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "hello.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.monitoring.enabled }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: /monitor/prometheus
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort | default 8080 }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.service.httpsPort | default 8443 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /monitor/l7check
              port: https
              scheme: HTTPS
            initialDelaySeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /monitor/l7check
              port: https
              scheme: HTTPS
            initialDelaySeconds: 1
            timeoutSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
