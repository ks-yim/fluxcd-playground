apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "hello.name" }}
  labels:
    {{- include "hello.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "hello.selectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
        {{- include "hello.selectorLabels" . | indent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ template "hello.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort | default 8000 }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - podcli
                - check
                - http
                - localhost:{{ .Values.service.httpPort | default 8000}}/internal/l7check
            initialDelaySeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - podcli
                - check
                - http
                - localhost:{{ .Values.service.httpPort | default 8000}}/internal/l7check
            initialDelaySeconds: 1
            timeoutSeconds: 5
          resources:
            {{ .Values.resources | indent 12 }}
